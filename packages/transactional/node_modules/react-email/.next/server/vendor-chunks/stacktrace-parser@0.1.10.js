"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stacktrace-parser@0.1.10";
exports.ids = ["vendor-chunks/stacktrace-parser@0.1.10"];
exports.modules = {

/***/ "(action-browser)/../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js":
/*!*******************************************************************************************************!*\
  !*** ../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\nvar UNKNOWN_FUNCTION = \"<unknown>\";\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */ function parse(stackString) {\n    var lines = stackString.split(\"\\n\");\n    return lines.reduce(function(stack, line) {\n        var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n        if (parseResult) {\n            stack.push(parseResult);\n        }\n        return stack;\n    }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nfunction parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf(\"native\") === 0; // start of line\n    var isEval = parts[2] && parts[2].indexOf(\"eval\") === 0; // start of line\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n    }\n    return {\n        file: !isNative ? parts[2] : null,\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: isNative ? [\n            parts[2]\n        ] : [],\n        lineNumber: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nfunction parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(\" > eval\") > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = null; // no column when eval\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: parts[2] ? parts[2].split(\",\") : [],\n        lineNumber: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\nfunction parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[4],\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\n");

/***/ }),

/***/ "(rsc)/../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js":
/*!*******************************************************************************************************!*\
  !*** ../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\nvar UNKNOWN_FUNCTION = \"<unknown>\";\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */ function parse(stackString) {\n    var lines = stackString.split(\"\\n\");\n    return lines.reduce(function(stack, line) {\n        var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n        if (parseResult) {\n            stack.push(parseResult);\n        }\n        return stack;\n    }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nfunction parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf(\"native\") === 0; // start of line\n    var isEval = parts[2] && parts[2].indexOf(\"eval\") === 0; // start of line\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n    }\n    return {\n        file: !isNative ? parts[2] : null,\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: isNative ? [\n            parts[2]\n        ] : [],\n        lineNumber: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nfunction parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(\" > eval\") > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = null; // no column when eval\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: parts[2] ? parts[2].split(\",\") : [],\n        lineNumber: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\nfunction parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[4],\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../../stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\n");

/***/ })

};
;